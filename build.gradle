buildscript {
    repositories {
        jcenter()
        maven { url = 'https://maven.minecraftforge.net/' }
        /*
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }*/
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:3.+"
        classpath "gradle.plugin.org.spongepowered:spongegradle:0.9.0"
    }

}

apply plugin: "net.minecraftforge.gradle"
apply plugin: "org.spongepowered.plugin"

version = modVersion
group = modGroup
archivesBaseName = modBaseName
compileJava.options.encoding = 'UTF-8'
configurations {
    extraLibs

}
dependencies {
    extraLibs 'com.fasterxml.jackson.core:jackson-core:2.13.3'
    extraLibs 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    configurations.compile.extendsFrom(configurations.extraLibs)
    implementation fileTree (dir: 'libs', include: '*.jar')
}

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    //mappings channel: 'snapshot', version: '20171003-1.12'
    mappings channel: 'snapshot', version: '20171003-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {mavenCentral()}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
    compile 'org.spongepowered:spongeapi:7.3.0'
}

jar {
    from{ configurations.extraLibs.collect{ it.isDirectory() ? it : zipTree(it)} }
    manifest {
        attributes([
                "Specification-Title": "PixelmonFRTrainer",
                "Specification-Vendor": "Zendraft",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"Zendraft",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
        exclude("module-info.class")
        exclude("META-INF/versions/")
    }

}


// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')




